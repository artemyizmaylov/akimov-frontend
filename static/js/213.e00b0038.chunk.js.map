{"version":3,"file":"static/js/213.e00b0038.chunk.js","mappings":"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","sources":["components/Catalogue/Item/Item.jsx","components/Catalogue/Catalogue.jsx","components/Header/Header.jsx","components/MaterialSlider/MaterialSlider.jsx"],"sourcesContent":["import './Item.css';\nimport gsap from 'gsap';\nimport {\n  React, useRef, useState, useContext,\n} from 'react';\nimport { Link } from 'react-router-dom';\nimport CartContext from '../../../context/CartContext';\nimport MaterialSlider from '../../MaterialSlider/MaterialSlider';\nimport useWindowWidth from '../../../hooks/useWindowWidth';\n\nexport default function Item({ item }) {\n  const { addToCart } = useContext(CartContext);\n  const [material, setMaterial] = useState('gold');\n  const startingPrice = Object.values(item.materials[material].size)[0].prices;\n\n  const goldImage = useRef();\n  const silverImage = useRef();\n  const windowWidth = useWindowWidth();\n\n  const handleCartClick = () => {\n    const itemCopy = { ...item };\n\n    itemCopy.material = material;\n    itemCopy.size = Object.keys(item.materials[material].size)[0];\n    itemCopy.price = item.materials[material].size[itemCopy.size].prices;\n    itemCopy.weight = item.materials[material].size[itemCopy.size].weight;\n\n    delete itemCopy.materials;\n    delete itemCopy.description;\n    delete itemCopy.gender;\n\n    addToCart(itemCopy);\n  };\n\n  function changeMaterials() {\n    const duration = 0.7;\n    const ease = 'inOut';\n\n    if (material === 'gold') {\n      gsap.to(goldImage.current, {\n        opacity: 0,\n        ease,\n        duration,\n      });\n      gsap.to(silverImage.current, {\n        opacity: 1,\n        ease,\n        duration,\n      });\n      setMaterial('silver');\n    } else {\n      gsap.to(goldImage.current, {\n        opacity: 1,\n        ease,\n        duration,\n      });\n      gsap.to(silverImage.current, {\n        opacity: 0,\n        ease,\n        duration,\n      });\n      setMaterial('gold');\n    }\n  }\n\n  return (\n    <li\n      className=\"item\"\n      style={{ gridColumn: `span ${(item.type === 'цепь' && windowWidth >= 768) ? 2 : 1}` }}\n    >\n      <div className=\"item__images-container\">\n        <img\n          className=\"item__image item__image_gold\"\n          alt={item.name}\n          src={`/items/${item.article}_gold${item.type === 'цепь' && windowWidth < 768 ? '_m' : ''}.png`}\n          ref={goldImage}\n        />\n        <img\n          className=\"item__image item__image_silver\"\n          alt={item.name}\n          src={`/items/${item.article}_silver${(item.type === 'цепь' && windowWidth < 768) ? '_m' : ''}.png`}\n          ref={silverImage}\n        />\n      </div>\n      <div className=\"item__main-info\">\n        <p className=\"item__text_small\">\n          {item.type[0].toUpperCase() + item.type.slice(1)}\n        </p>\n        <p className=\"item__text\">{item.name.toUpperCase()}</p>\n      </div>\n      <div className=\"item__interactive\">\n        <MaterialSlider\n          value={material}\n          onChange={changeMaterials}\n          id={item.article}\n          vertical\n        />\n        <div className=\"item__info\">\n          <p className=\"item__text_small\">{material === 'gold' ? 'золото 585' : 'серебро 925'}</p>\n          <p className=\"item__text_small\">{item.materials[material].gems}</p>\n          <p className=\"item__text item__price\">\n            {`от ${startingPrice} Р`}\n          </p>\n        </div>\n        <button\n          className=\"item__cart\"\n          type=\"button\"\n          aria-label=\"Добавить\"\n          onClick={handleCartClick}\n        />\n      </div>\n      <Link\n        to=\"/details\"\n        state={{ item }}\n        className=\"item__text_gold item__text_big\"\n      >\n        ПОДРОБНЕЕ\n      </Link>\n    </li>\n  );\n}\n","import './Catalogue.css';\nimport {\n  React, useState,\n} from 'react';\nimport Item from './Item/Item';\nimport Menu from '../Menu/Menu';\nimport Header from '../Header/Header';\nimport db from '../../db.json';\n\nexport default function Catalogue() {\n  const [items] = useState(db);\n\n  return (\n    <section className=\"catalogue\">\n      <Menu />\n      <Header text=\"ЮвелирнАя ИкОНОТЕКА\" />\n      <ul className=\"catalogue__items\">\n        {items.map((item) => (\n          <Item\n            key={item.article}\n            item={item}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport CartContext from '../../context/CartContext';\nimport './Header.css';\n\nexport default function Header({\n  text, subtext, buttonHandler, buttonImage,\n}) {\n  const { cartItems, setCartIsOpen } = useContext(CartContext);\n  const [counter, setCounter] = useState(0);\n\n  const openCartPopup = () => {\n    setCartIsOpen(true);\n  };\n\n  useEffect(() => {\n    let count = 0;\n\n    cartItems.forEach((item) => {\n      count = item.count + count;\n    });\n\n    setCounter(count);\n  }, [cartItems]);\n\n  return (\n    <header className=\"header\">\n      <button className=\"header__question header__button\" type=\"button\">\n        ?\n      </button>\n      <div className=\"header__text-container\">\n        <p className=\"header__subtext\">{subtext}</p>\n        <p className=\"header__text\">{text}</p>\n      </div>\n      <button\n        className=\"header__button\"\n        onClick={buttonHandler || openCartPopup}\n        type=\"button\"\n      >\n        {buttonImage ? (\n          <img src={buttonImage} alt=\"\" />\n        ) : (\n          <div className=\"header__cart\">\n            <p className=\"header__cart-counter\">{counter}</p>\n          </div>\n        )}\n      </button>\n    </header>\n  );\n}\n","import React from 'react';\nimport './MaterialSlider.css';\n\nexport default function MaterialSlider({\n  id, value, onChange, vertical,\n}) {\n  return (\n    <div className=\"material-slider\">\n      <input\n        className=\"material-slider__checkbox\"\n        type=\"checkbox\"\n        id={id}\n        value={value}\n        onChange={onChange}\n      />\n      <label className={`material-slider__label ${vertical && 'material-slider__label_vertical'}`} htmlFor={id}>\n        <span className={`material-slider__pointer ${vertical && 'material-slider__pointer_vertical'}`} />\n        <p className=\"material-slider__text\">с.925</p>\n        <p className=\"material-slider__text\">з.585</p>\n      </label>\n    </div>\n  );\n}\n"],"names":["Item","item","addToCart","useContext","CartContext","useState","material","setMaterial","startingPrice","Object","values","materials","size","prices","goldImage","useRef","silverImage","windowWidth","useWindowWidth","className","style","gridColumn","type","alt","name","src","article","ref","toUpperCase","slice","MaterialSlider","value","onChange","duration","ease","gsap","current","opacity","id","vertical","gems","onClick","itemCopy","keys","price","weight","description","gender","to","state","Catalogue","db","items","Menu","Header","text","map","subtext","buttonHandler","buttonImage","cartItems","setCartIsOpen","counter","setCounter","useEffect","count","forEach","htmlFor"],"sourceRoot":""}